
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Comparison of schedules

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


Comparing lBoundEstimator: PAPER, ALAPBound: listSchedule 
		 with lBoundEstimator: OWN, ALAPBound: listSchedule
--->  Schedules are equal
lBoundEstimator: PAPER, ALAPBound: listSchedule took the same time as lBoundEstimator: OWN, ALAPBound: listSchedule



Comparing lBoundEstimator: PAPER, ALAPBound: listSchedule 
		 with lBoundEstimator: PAPER, ALAPBound: lazyALAP
--->  Schedules are equal
faster: lBoundEstimator: PAPER, ALAPBound: lazyALAP -> 2, vs. lBoundEstimator: PAPER, ALAPBound: listSchedule -> 7



Comparing lBoundEstimator: PAPER, ALAPBound: listSchedule 
		 with lBoundEstimator: OWN, ALAPBound: lazyALAP
--->  Schedules are equal
faster: lBoundEstimator: OWN, ALAPBound: lazyALAP -> 2, vs. lBoundEstimator: PAPER, ALAPBound: listSchedule -> 7



Comparing lBoundEstimator: PAPER, ALAPBound: listSchedule 
		 with lBoundEstimator: ASAP, ALAPBound: listSchedule
--->  Schedules are equal
lBoundEstimator: PAPER, ALAPBound: listSchedule took the same time as lBoundEstimator: ASAP, ALAPBound: listSchedule



Comparing lBoundEstimator: PAPER, ALAPBound: listSchedule 
		 with lBoundEstimator: ASAP, ALAPBound: lazyALAP
--->  Schedules are equal
faster: lBoundEstimator: ASAP, ALAPBound: lazyALAP -> 1, vs. lBoundEstimator: PAPER, ALAPBound: listSchedule -> 7



Comparing lBoundEstimator: OWN, ALAPBound: listSchedule 
		 with lBoundEstimator: PAPER, ALAPBound: lazyALAP
--->  Schedules are equal
faster: lBoundEstimator: PAPER, ALAPBound: lazyALAP -> 2, vs. lBoundEstimator: OWN, ALAPBound: listSchedule -> 8



Comparing lBoundEstimator: OWN, ALAPBound: listSchedule 
		 with lBoundEstimator: OWN, ALAPBound: lazyALAP
--->  Schedules are equal
faster: lBoundEstimator: OWN, ALAPBound: lazyALAP -> 2, vs. lBoundEstimator: OWN, ALAPBound: listSchedule -> 8



Comparing lBoundEstimator: OWN, ALAPBound: listSchedule 
		 with lBoundEstimator: ASAP, ALAPBound: listSchedule
--->  Schedules are equal
faster: lBoundEstimator: ASAP, ALAPBound: listSchedule -> 6, vs. lBoundEstimator: OWN, ALAPBound: listSchedule -> 8



Comparing lBoundEstimator: OWN, ALAPBound: listSchedule 
		 with lBoundEstimator: ASAP, ALAPBound: lazyALAP
--->  Schedules are equal
faster: lBoundEstimator: ASAP, ALAPBound: lazyALAP -> 1, vs. lBoundEstimator: OWN, ALAPBound: listSchedule -> 8



Comparing lBoundEstimator: PAPER, ALAPBound: lazyALAP 
		 with lBoundEstimator: OWN, ALAPBound: lazyALAP
--->  Schedules are equal
lBoundEstimator: PAPER, ALAPBound: lazyALAP took the same time as lBoundEstimator: OWN, ALAPBound: lazyALAP



Comparing lBoundEstimator: PAPER, ALAPBound: lazyALAP 
		 with lBoundEstimator: ASAP, ALAPBound: listSchedule
--->  Schedules are equal
faster: lBoundEstimator: PAPER, ALAPBound: lazyALAP -> 2, vs. lBoundEstimator: ASAP, ALAPBound: listSchedule -> 6



Comparing lBoundEstimator: PAPER, ALAPBound: lazyALAP 
		 with lBoundEstimator: ASAP, ALAPBound: lazyALAP
--->  Schedules are equal
lBoundEstimator: PAPER, ALAPBound: lazyALAP took the same time as lBoundEstimator: ASAP, ALAPBound: lazyALAP



Comparing lBoundEstimator: OWN, ALAPBound: lazyALAP 
		 with lBoundEstimator: ASAP, ALAPBound: listSchedule
--->  Schedules are equal
faster: lBoundEstimator: OWN, ALAPBound: lazyALAP -> 2, vs. lBoundEstimator: ASAP, ALAPBound: listSchedule -> 6



Comparing lBoundEstimator: OWN, ALAPBound: lazyALAP 
		 with lBoundEstimator: ASAP, ALAPBound: lazyALAP
--->  Schedules are equal
lBoundEstimator: OWN, ALAPBound: lazyALAP took the same time as lBoundEstimator: ASAP, ALAPBound: lazyALAP



Comparing lBoundEstimator: ASAP, ALAPBound: listSchedule 
		 with lBoundEstimator: ASAP, ALAPBound: lazyALAP
--->  Schedules are equal
faster: lBoundEstimator: ASAP, ALAPBound: lazyALAP -> 1, vs. lBoundEstimator: ASAP, ALAPBound: listSchedule -> 6



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Printing schedule

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Found schedule of length 9 with 21 nodes

n16--33:DMA_LOAD : [0:1]
n1--44:IADD : [0:0]
n17--57:IADD : [0:0]
n5--70:IADD : [0:0]
n14--58:DMA_LOAD : [1:2]
n0--45:DMA_LOAD : [1:2]
n4--71:DMA_LOAD : [1:2]
n12--37:IAND : [2:2]
n13--75:IAND : [3:3]
n3--62:IAND : [3:3]
n9--40:ISHL : [3:3]
n11--49:IAND : [3:3]
n2--65:ISHL : [4:4]
n18--79:IADD : [4:4]
n19--16:IFLE : [4:4]
n10--52:ISHL : [4:4]
n7--66:IOR : [5:5]
n8--53:IOR : [5:5]
n20--22:IADD : [5:5]
n6--76:IOR : [6:6]
n15--78:DMA_STORE : [7:8]


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Printing BULB trees

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


###########################################################
Printing BULB metrics for lBoundEstimator: PAPER, ALAPBound: listSchedule
BULB tree contains 10 inspected nodes
0 tried intervals violated resource constraints and were not further inspected
Lower == Upper reached: true, 1 times
Best latency found: 9
Initial best latency: 9
20 out of 21 DFG nodes could be skipped to find best schedule
It took 1 milliseconds to converge
Scheduling took 7 milliseconds

Print BULB tree: 
l_bound: 9, u_bound: 9; investigated partial schedule: {}; 
├── l_bound: 9, u_bound: 9; investigated n1--44:IADD in [0:0]; investigated partial schedule: {0=[n1--44:IADD]}; 
├── l_bound: 13, u_bound: 13; investigated n1--44:IADD in [4:4]; investigated partial schedule: {4=[n1--44:IADD]}; 
├── l_bound: 17, u_bound: 17; investigated n1--44:IADD in [8:8]; investigated partial schedule: {8=[n1--44:IADD]}; 
├── l_bound: 14, u_bound: 14; investigated n1--44:IADD in [5:5]; investigated partial schedule: {5=[n1--44:IADD]}; 
├── l_bound: 15, u_bound: 15; investigated n1--44:IADD in [6:6]; investigated partial schedule: {6=[n1--44:IADD]}; 
├── l_bound: 11, u_bound: 11; investigated n1--44:IADD in [2:2]; investigated partial schedule: {2=[n1--44:IADD]}; 
├── l_bound: 10, u_bound: 10; investigated n1--44:IADD in [1:1]; investigated partial schedule: {1=[n1--44:IADD]}; 
├── l_bound: 12, u_bound: 12; investigated n1--44:IADD in [3:3]; investigated partial schedule: {3=[n1--44:IADD]}; 
└── l_bound: 16, u_bound: 16; investigated n1--44:IADD in [7:7]; investigated partial schedule: {7=[n1--44:IADD]}; 


###########################################################
Printing BULB metrics for lBoundEstimator: OWN, ALAPBound: listSchedule
BULB tree contains 10 inspected nodes
0 tried intervals violated resource constraints and were not further inspected
Lower == Upper reached: true, 1 times
Best latency found: 9
Initial best latency: 9
20 out of 21 DFG nodes could be skipped to find best schedule
It took 2 milliseconds to converge
Scheduling took 8 milliseconds

Print BULB tree: 
l_bound: 9, u_bound: 9; investigated partial schedule: {}; 
├── l_bound: 9, u_bound: 9; investigated n1--44:IADD in [0:0]; investigated partial schedule: {0=[n1--44:IADD]}; 
├── l_bound: 10, u_bound: 10; investigated n1--44:IADD in [1:1]; investigated partial schedule: {1=[n1--44:IADD]}; 
├── l_bound: 17, u_bound: 17; investigated n1--44:IADD in [8:8]; investigated partial schedule: {8=[n1--44:IADD]}; 
├── l_bound: 12, u_bound: 12; investigated n1--44:IADD in [3:3]; investigated partial schedule: {3=[n1--44:IADD]}; 
├── l_bound: 16, u_bound: 16; investigated n1--44:IADD in [7:7]; investigated partial schedule: {7=[n1--44:IADD]}; 
├── l_bound: 14, u_bound: 14; investigated n1--44:IADD in [5:5]; investigated partial schedule: {5=[n1--44:IADD]}; 
├── l_bound: 13, u_bound: 13; investigated n1--44:IADD in [4:4]; investigated partial schedule: {4=[n1--44:IADD]}; 
├── l_bound: 15, u_bound: 15; investigated n1--44:IADD in [6:6]; investigated partial schedule: {6=[n1--44:IADD]}; 
└── l_bound: 11, u_bound: 11; investigated n1--44:IADD in [2:2]; investigated partial schedule: {2=[n1--44:IADD]}; 


###########################################################
Printing BULB metrics for lBoundEstimator: PAPER, ALAPBound: lazyALAP
BULB tree contains 2 inspected nodes
0 tried intervals violated resource constraints and were not further inspected
Lower == Upper reached: true, 1 times
Best latency found: 9
Initial best latency: 9
20 out of 21 DFG nodes could be skipped to find best schedule
It took 1 milliseconds to converge
Scheduling took 2 milliseconds

Print BULB tree: 
l_bound: 9, u_bound: 9; investigated partial schedule: {}; 
└── l_bound: 9, u_bound: 9; investigated n1--44:IADD in [0:0]; investigated partial schedule: {0=[n1--44:IADD]}; 


###########################################################
Printing BULB metrics for lBoundEstimator: OWN, ALAPBound: lazyALAP
BULB tree contains 2 inspected nodes
0 tried intervals violated resource constraints and were not further inspected
Lower == Upper reached: true, 1 times
Best latency found: 9
Initial best latency: 9
20 out of 21 DFG nodes could be skipped to find best schedule
It took 2 milliseconds to converge
Scheduling took 2 milliseconds

Print BULB tree: 
l_bound: 9, u_bound: 9; investigated partial schedule: {}; 
└── l_bound: 9, u_bound: 9; investigated n1--44:IADD in [0:0]; investigated partial schedule: {0=[n1--44:IADD]}; 


###########################################################
Printing BULB metrics for lBoundEstimator: ASAP, ALAPBound: listSchedule
BULB tree contains 10 inspected nodes
0 tried intervals violated resource constraints and were not further inspected
Lower == Upper reached: true, 1 times
Best latency found: 9
Initial best latency: 9
20 out of 21 DFG nodes could be skipped to find best schedule
It took 1 milliseconds to converge
Scheduling took 6 milliseconds

Print BULB tree: 
l_bound: 9, u_bound: 9; investigated partial schedule: {}; 
├── l_bound: 9, u_bound: 11; investigated n1--44:IADD in [2:2]; investigated partial schedule: {2=[n1--44:IADD]}; 
├── l_bound: 9, u_bound: 13; investigated n1--44:IADD in [4:4]; investigated partial schedule: {4=[n1--44:IADD]}; 
├── l_bound: 9, u_bound: 15; investigated n1--44:IADD in [6:6]; investigated partial schedule: {6=[n1--44:IADD]}; 
├── l_bound: 9, u_bound: 14; investigated n1--44:IADD in [5:5]; investigated partial schedule: {5=[n1--44:IADD]}; 
├── l_bound: 9, u_bound: 17; investigated n1--44:IADD in [8:8]; investigated partial schedule: {8=[n1--44:IADD]}; 
├── l_bound: 9, u_bound: 9; investigated n1--44:IADD in [0:0]; investigated partial schedule: {0=[n1--44:IADD]}; 
├── l_bound: 9, u_bound: 10; investigated n1--44:IADD in [1:1]; investigated partial schedule: {1=[n1--44:IADD]}; 
├── l_bound: 9, u_bound: 12; investigated n1--44:IADD in [3:3]; investigated partial schedule: {3=[n1--44:IADD]}; 
└── l_bound: 9, u_bound: 16; investigated n1--44:IADD in [7:7]; investigated partial schedule: {7=[n1--44:IADD]}; 


###########################################################
Printing BULB metrics for lBoundEstimator: ASAP, ALAPBound: lazyALAP
BULB tree contains 2 inspected nodes
0 tried intervals violated resource constraints and were not further inspected
Lower == Upper reached: true, 1 times
Best latency found: 9
Initial best latency: 9
20 out of 21 DFG nodes could be skipped to find best schedule
It took 1 milliseconds to converge
Scheduling took 1 milliseconds

Print BULB tree: 
l_bound: 9, u_bound: 9; investigated partial schedule: {}; 
└── l_bound: 9, u_bound: 9; investigated n1--44:IADD in [0:0]; investigated partial schedule: {0=[n1--44:IADD]}; 

